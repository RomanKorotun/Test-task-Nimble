{"version":3,"file":"static/js/402.3fc147c2.chunk.js","mappings":"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","sources":["components/ContactsForm/ContactsForm.styled.js","components/ContactsForm/ContactsForm.js","components/ContactsList/ContactsList.styled.js","components/ContactListItem/ContactListItem.styled.js","image/sprite.svg","components/ContactListItem/ContactListItem.js","components/ContactsList/ContactsList.js","page/ContactsPage/ContactsPage.styled.js","page/ContactsPage/ContactsPage.js"],"sourcesContent":["import styled from \"styled-components\";\r\nimport { Form, Field, ErrorMessage } from \"formik\";\r\n\r\nexport const ContactsFormCard = styled.div`\r\n  @media only screen and (max-width: 767px) {\r\n    width: 280px;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    margin-bottom: 33px;\r\n  }\r\n  @media only screen and (min-width: 768px) {\r\n    position: sticky;\r\n    height: 100%;\r\n    top: 36px;\r\n    width: 260px;\r\n  }\r\n  @media only screen and (min-width: 1200px) {\r\n    width: 300px;\r\n  }\r\n`;\r\n\r\nexport const FormStyled = styled(Form)`\r\n  width: 100%;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const TitleForm = styled.p`\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  color: #000;\r\n  margin-bottom: 6px;\r\n`;\r\n\r\nexport const LabelStyled = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n  &:not(:last-of-type) {\r\n    margin-bottom: 14px;\r\n  }\r\n  &:last-of-type {\r\n    margin-bottom: 24px;\r\n  }\r\n`;\r\n\r\nexport const LabelTitle = styled.span`\r\n  font-weight: 400;\r\n  font-size: 12px;\r\n  line-height: 1.66667;\r\n  color: #000;\r\n  margin-left: 6px;\r\n`;\r\n\r\nexport const FieldStyled = styled(Field)`\r\n  border: 1px solid #aaa;\r\n  border-radius: 8px;\r\n  padding: 14px 12px;\r\n`;\r\n\r\nexport const ErrorMsgStyled = styled(ErrorMessage)`\r\n  color: #eb4c42;\r\n  position: absolute;\r\n  left: 0;\r\n  bottom: -18px;\r\n  font-size: 12px;\r\n  margin-left: 6px;\r\n`;\r\n\r\nexport const ButtonSubmitForm = styled.button`\r\n  border: 1px solid #aaa;\r\n  background-color: transparent;\r\n  border-radius: 8px;\r\n  padding-top: 14px;\r\n  padding-bottom: 14px;\r\n  width: 100%;\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  color: #000;\r\n`;\r\n\r\nexport const ButtonClose = styled.button`\r\n  background-color: transparent;\r\n  border-radius: 50%;\r\n`;\r\n","import { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n  ButtonSubmitForm,\r\n  ContactsFormCard,\r\n  ErrorMsgStyled,\r\n  FieldStyled,\r\n  FormStyled,\r\n  LabelStyled,\r\n  LabelTitle,\r\n  TitleForm,\r\n} from \"./ContactsForm.styled\";\r\n\r\nimport {\r\n  useGetContactsQuery,\r\n  useAddContactMutation,\r\n} from \"../../redux/apiSlice\";\r\n\r\nconst RegexpEmail = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n\r\nconst ContactSchema = Yup.object().shape({\r\n  firstName: Yup.string()\r\n    .min(2, \"Too Short!\")\r\n    .max(50, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  lastName: Yup.string()\r\n    .min(2, \"Too Short!\")\r\n    .max(50, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  email: Yup.string()\r\n    .matches(RegexpEmail, \"Invalid email\")\r\n    .required(\"Required\"),\r\n});\r\n\r\nexport const ContactsForm = () => {\r\n  const [addContact] = useAddContactMutation();\r\n  const { refetch } = useGetContactsQuery();\r\n  return (\r\n    <ContactsFormCard>\r\n      <TitleForm>Create Contact</TitleForm>\r\n      <Formik\r\n        initialValues={{\r\n          firstName: \"\",\r\n          lastName: \"\",\r\n          email: \"\",\r\n        }}\r\n        validationSchema={ContactSchema}\r\n        onSubmit={async (values, actions) => {\r\n          await addContact({\r\n            fields: {\r\n              \"first name\": [{ value: values.firstName }],\r\n              \"last name\": [{ value: values.lastName }],\r\n              email: [{ value: values.email }],\r\n            },\r\n            record_type: \"person\",\r\n            privacy: {\r\n              edit: null,\r\n              read: null,\r\n            },\r\n            owner_id: null,\r\n          });\r\n          await refetch();\r\n          actions.resetForm();\r\n        }}\r\n      >\r\n        <FormStyled>\r\n          <LabelStyled>\r\n            <LabelTitle>First Name</LabelTitle>\r\n            <FieldStyled name=\"firstName\" />\r\n            <ErrorMsgStyled component=\"div\" name=\"firstName\" />\r\n          </LabelStyled>\r\n\r\n          <LabelStyled>\r\n            <LabelTitle>Last Name</LabelTitle>\r\n            <FieldStyled name=\"lastName\" />\r\n            <ErrorMsgStyled component=\"div\" name=\"lastName\" />\r\n          </LabelStyled>\r\n\r\n          <LabelStyled>\r\n            <LabelTitle>Email</LabelTitle>\r\n            <FieldStyled name=\"email\" type=\"email\" />\r\n            <ErrorMsgStyled component=\"div\" name=\"email\" />\r\n          </LabelStyled>\r\n\r\n          <ButtonSubmitForm type=\"submit\">Add Contact</ButtonSubmitForm>\r\n        </FormStyled>\r\n      </Formik>\r\n    </ContactsFormCard>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContactsWrapper = styled.div`\r\n  @media only screen and (min-width: 768px) {\r\n    width: 400px;\r\n  }\r\n  @media only screen and (min-width: 1200px) {\r\n    width: 558px;\r\n  }\r\n`;\r\n\r\nexport const ContactsListTitle = styled.p`\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  color: #000;\r\n  margin-bottom: 9px;\r\n`;\r\n\r\nexport const LoadingCard = styled.div`\r\n  @media only screen and (min-width: 768px) {\r\n    width: 100%;\r\n  }\r\n  @media only screen and (min-width: 1200px) {\r\n    width: 100px;\r\n  }\r\n`;\r\n\r\nexport const ErrorCard = styled.div`\r\n  @media only screen and (min-width: 768px) {\r\n    width: 100%;\r\n  }\r\n  @media only screen and (min-width: 1200px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const ContactList = styled.ul`\r\n  @media only screen and (min-width: 768px) {\r\n    width: 100%;\r\n  }\r\n  @media only screen and (min-width: 1200px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const Contact = styled.li`\r\n  position: relative;\r\n  padding-left: 15px;\r\n  padding-top: 14px;\r\n  padding-right: 46px;\r\n  padding-bottom: 25px;\r\n  background-color: #ededed;\r\n  border-radius: 4px;\r\n  margin-bottom: 16px;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const UserWrapper = styled.div`\r\n  display: flex;\r\n  gap: 12px;\r\n  margin-bottom: 12px;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: 59px;\r\n  height: 59px;\r\n  border-radius: 50%;\r\n`;\r\n\r\nexport const InfoUser = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  gap: 2px;\r\n`;\r\n\r\nexport const FirstName = styled.span`\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  color: #000;\r\n`;\r\n\r\nexport const LastName = styled.span`\r\n  font-weight: 500;\r\n  font-size: 16px;\r\n  color: #000;\r\n`;\r\n\r\nexport const ListTags = styled.ul`\r\n  margin-left: 70px;\r\n  display: flex;\r\n  gap: 8px;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const ItemsTags = styled.li`\r\n  background-color: #a6a6a6;\r\n  border-radius: 4px;\r\n  padding: 2px 12px;\r\n  font-weight: 500;\r\n  color: #000;\r\n`;\r\n\r\nexport const ButtonClose = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: absolute;\r\n  top: 9px;\r\n  right: 19px;\r\n  background-color: transparent;\r\n  padding: 0;\r\n  border-radius: 50%;\r\n  height: 24px;\r\n  width: 24px;\r\n`;\r\n","var _defs;\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nimport * as React from \"react\";\nfunction SvgSprite(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    \"aria-hidden\": \"true\",\n    style: {\n      position: \"absolute\",\n      width: 0,\n      height: 0,\n      overflow: \"hidden\"\n    },\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"symbol\", {\n    id: \"close-icon\",\n    viewBox: \"0 0 32 32\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M25.333 8.547l-1.88-1.88-7.453 7.453-7.453-7.453-1.88 1.88 7.453 7.453-7.453 7.453 1.88 1.88 7.453-7.453 7.453 7.453 1.88-1.88-7.453-7.453z\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSprite);\nexport default __webpack_public_path__ + \"static/media/sprite.b0b292dff3565145614516b0e39a8ebc.svg\";\nexport { ForwardRef as ReactComponent };","import {\r\n  UserWrapper,\r\n  Image,\r\n  InfoUser,\r\n  FirstName,\r\n  LastName,\r\n  ListTags,\r\n  ItemsTags,\r\n  ButtonClose,\r\n} from \"./ContactListItem.styled\";\r\nimport sprite from \"../../image/sprite.svg\";\r\nimport {\r\n  useDeleteContactMutation,\r\n  useGetContactsQuery,\r\n} from \"../../redux/apiSlice\";\r\n\r\nexport const ContactListItem = ({ contact }) => {\r\n  const [deleteContact] = useDeleteContactMutation();\r\n  const { refetch } = useGetContactsQuery();\r\n  return (\r\n    <>\r\n      <UserWrapper>\r\n        <Image src={contact?.avatar_url} alt=\"avatar\" />\r\n        <InfoUser>\r\n          <div>\r\n            <FirstName>{contact?.fields?.[\"first name\"]?.[0]?.value}</FirstName>\r\n            &nbsp;\r\n            <LastName>{contact?.fields?.[\"last name\"]?.[0]?.value}</LastName>\r\n          </div>\r\n          <p>{contact?.fields?.[\"email\"]?.[0]?.value}</p>\r\n        </InfoUser>\r\n      </UserWrapper>\r\n      {contact.tags.length > 0 && (\r\n        <ListTags>\r\n          {contact.tags.map((item) => (\r\n            <ItemsTags key={item?.id}>{item?.tag}</ItemsTags>\r\n          ))}\r\n        </ListTags>\r\n      )}\r\n      <ButtonClose\r\n        onClick={async (e) => {\r\n          e.stopPropagation();\r\n          await deleteContact(contact.id);\r\n          await refetch();\r\n        }}\r\n      >\r\n        <svg width={22} height={24}>\r\n          <use href={`${sprite}#close-icon`}></use>\r\n        </svg>\r\n      </ButtonClose>\r\n    </>\r\n  );\r\n};\r\n","import {\r\n  ContactList,\r\n  Contact,\r\n  ContactsWrapper,\r\n  ContactsListTitle,\r\n  ErrorCard,\r\n  LoadingCard,\r\n} from \"./ContactsList.styled\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { ContactListItem } from \"../ContactListItem/ContactListItem\";\r\nimport { useGetContactsQuery } from \"../../redux/apiSlice\";\r\n\r\nexport const ContactsList = () => {\r\n  const { data: contacts, error, isLoading: loading } = useGetContactsQuery();\r\n  const navigate = useNavigate();\r\n  return (\r\n    <>\r\n      <ContactsWrapper>\r\n        {loading && <LoadingCard>Loadind...</LoadingCard>}\r\n        {error && <ErrorCard>Error. Please reload the page...</ErrorCard>}\r\n        {contacts?.resources.length > 0 && (\r\n          <div>\r\n            <ContactsListTitle>Contacts</ContactsListTitle>\r\n            <ContactList>\r\n              {contacts.resources.map((contact) => {\r\n                return (\r\n                  <Contact\r\n                    key={contact.id}\r\n                    onClick={() => navigate(`/contact/${contact.id}`)}\r\n                  >\r\n                    <ContactListItem contact={contact} />\r\n                  </Contact>\r\n                );\r\n              })}\r\n            </ContactList>\r\n          </div>\r\n        )}\r\n      </ContactsWrapper>\r\n    </>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const ContactsContainerPosition = styled.div`\r\n  display: flex;\r\n\r\n  @media only screen and (max-width: 767px) {\r\n    flex-direction: column;\r\n  }\r\n  @media only screen and (min-width: 768px) {\r\n    justify-content: center;\r\n    gap: 38px;\r\n  }\r\n\r\n  @media only screen and (min-width: 1200px) {\r\n    justify-content: center;\r\n    gap: 38px;\r\n  }\r\n`;\r\n","import { ContactsForm } from \"../../components/ContactsForm/ContactsForm\";\r\nimport { ContactsList } from \"../../components/ContactsList/ContactsList\";\r\n\r\nimport { ContactsContainerPosition } from \"./ContactsPage.styled\";\r\n\r\nconst ContactsPage = () => {\r\n  return (\r\n    <ContactsContainerPosition>\r\n      <ContactsForm />\r\n      <ContactsList />\r\n    </ContactsContainerPosition>\r\n  );\r\n};\r\n\r\nexport default ContactsPage;\r\n"],"names":["ContactsFormCard","styled","div","_templateObject","_taggedTemplateLiteral","FormStyled","Form","_templateObject2","TitleForm","p","_templateObject3","LabelStyled","label","_templateObject4","LabelTitle","span","_templateObject5","FieldStyled","Field","_templateObject6","ErrorMsgStyled","ErrorMessage","_templateObject7","ButtonSubmitForm","button","_templateObject8","_templateObject9","ContactSchema","Yup","shape","firstName","min","max","required","lastName","email","matches","ContactsForm","addContact","useAddContactMutation","refetch","useGetContactsQuery","_jsxs","children","_jsx","Formik","initialValues","validationSchema","onSubmit","async","values","actions","fields","value","record_type","privacy","edit","read","owner_id","resetForm","name","component","type","ContactsWrapper","ContactsListTitle","LoadingCard","ErrorCard","ContactList","ul","Contact","li","UserWrapper","Image","img","InfoUser","FirstName","LastName","ListTags","ItemsTags","ButtonClose","ContactListItem","_ref","_contact$fields","_contact$fields$first","_contact$fields$first2","_contact$fields2","_contact$fields2$last","_contact$fields2$last2","_contact$fields3","_contact$fields3$emai","_contact$fields3$emai2","contact","deleteContact","useDeleteContactMutation","_Fragment","src","avatar_url","alt","tags","length","map","item","tag","id","onClick","e","stopPropagation","width","height","href","concat","sprite","ContactsList","data","contacts","error","isLoading","loading","navigate","useNavigate","resources","ContactsContainerPosition","ContactsPage"],"sourceRoot":""}